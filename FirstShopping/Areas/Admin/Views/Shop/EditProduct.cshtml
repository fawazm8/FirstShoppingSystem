@model FirstShopping.Models.ViewModels.Shop.ProductVM
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "EditProduct";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "تعديل المنتج";
}

<h2>تعديل المنتج</h2>

<div>
    @Html.ActionLink("رجوع", "Products")
</div>

<style>
    input#ImageName {
        display: none;
    }
</style>

@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}

@using (Html.BeginForm("EditProduct", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductArName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductArName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductArName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductEnName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductEnName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductEnName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    // قم بتنظيف النص من أكواد HTML
                    string cleanDescription = Model.Description != null ? Regex.Replace(Model.Description, "<.*?>", string.Empty) : string.Empty;
                }
                <!-- استخدم النص النظيف مباشرةً بدون Html.Raw -->
                @Html.TextArea("Description", cleanDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="HasSidebar">المجموعة</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryID, Model.Categories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="HasSidebar">اسم الصورة</label>
            @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
            <div class="col-md-10">
                <img src="/Images/Uploads/Products/@Model.id/Thumbs/@Model.ImageName" />
                <br /><br />
                <img id="imgpreview" src="#" />
                <br /><br />
                <div class="col-md-10">
                    <input type="file" name="file" id="ImageUpload" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="تعديل" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<hr />

@if (!Model.GalleryImages.Any())
{
    <h3>ليس هناك مكتبة صور لهذا المنتج.</h3>
}

<form action="/Admin/Shop/SaveGalleryImages" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
    @Html.Hidden("id", @Model.id)
    <div class="fallback">
        <input type="file" name="file" multiple />
        <input type="submit" value="Upload" />
    </div>
</form>

<br />
<br />

@foreach (var image in Model.GalleryImages)
{
    <div style="display: inline-block;margin-right: 15px;">
        <img src="/Images/Uploads/Products/@Model.id/Thumbs/@image" />
        @Html.ActionLink("حذف", "DeleteImage", "Shop", new { @class = "deleteimage", data_name = image })
    </div>
}
<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />


<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />
@section Scripts {
    <script src="~/Scripts/dropzone/dropzone.js"></script>
    <script>
    $(function () {
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $("img#imgpreview")
                        .attr("src", e.target.result)
                        .width(200)
                        .height(200);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }
        $("#ImageUpload").change(function () {
            readURL(this);
        });

        Dropzone.options.dropzoneForm = {
            acceptedFiles: "image/*",
            init: function() {
                this.on("complete", function (file) {
                    if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                        location.reload();
                    }
                });

                this.on("sending", function (file, xhr, formData) {
                    formData.append("id", @Model.id); // تأكد من أن `@Model.id` يتم تمريرها هنا
                });
            }
        };
    });
    </script>

}
